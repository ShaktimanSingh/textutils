{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","class","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","className","mode","href","navTitle","id","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","App","setMode","setAlert","message","setTimeout","body","disabledLink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.41c6dd10.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissable fade show`} role=\"alert\">\r\n      <strong>Alert! {capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n      {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"#\">{props.navTitle}</a>\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/about\">About</Link>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<div className=\"form-check form-switch\">\r\n\t\t\t\t\t\t<input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n\t\t\t\t\t\t<label className={`form-check-label mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<form className=\"d-flex\">\r\n\t\t\t\t\t\t<input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\t\t\t\t\t\t<button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nNavbar.propTypes = {\r\n\tnavTitle: PropTypes.string.isRequired,\r\n\tdisabledLink: PropTypes.string.isRequired\r\n};\r\n\r\n// Navbar.defaultProps = {\r\n//     navTitle: 'Enter Title',\r\n//     disabledLink: 'Dsbld Link'\r\n// }","import React, { useState } from \"react\"\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase function has been clicked.\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text converted in uppercase successfully.\", \"success\");\r\n  }\r\n  const handleLowClick = () => {\r\n    // console.log(\"uppercase function has been clicked.\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text converted in lowercase successfully.\", \"success\");\r\n  }\r\n  const handleClearClick = () => {\r\n    // console.log(\"uppercase function has been clicked.\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Textarea is cleared.\", \"warning\");\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"handelOnChange method.\");\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text copied to clipboard successfully.\", \"info\");\r\n  }\r\n\r\n  const handleRESClick = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  const [text, setText] = useState('')\r\n  return (\r\n    <>\r\n      <div style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <div className=\"my-3\">\r\n          <h3>{props.heading}</h3>\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" style={{ backgroundColor: props.mode === 'dark' ? '#343a40' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} rows=\"5\"></textarea>\r\n        </div>\r\n        <div className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</div>\r\n        <div className=\"btn btn-info mx-2\" onClick={handleLowClick}>Convert to Lowercase</div>\r\n        <div className=\"btn btn-danger mx-2\" onClick={handleClearClick}>Clear Text</div>\r\n        <div className=\"btn btn-dark mx-2\" onClick={handleCopyClick}>Copy Text</div>\r\n        <div className=\"btn btn-warning mx-2\" onClick={handleRESClick}>Remove Extra Spaces</div>\r\n\r\n        <div className=\"my-3\">\r\n          <h3>Text Summary</h3>\r\n          <p><b>{text.split(\" \").length} Words</b>  <b>{text.length} Characters</b></p>\r\n          <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n\r\n          <h3>Textarea Preview</h3>\r\n          <p>{text.length > 0 ? text : 'Enter text to see the preview'}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport TextForm from './components/TextForm';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark mode has been enabled.\", \"success\")\n    }\n    else if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled.\", \"success\")\n    }\n  }\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar navTitle=\"TextUtils\" mode={mode} toggleMode={toggleMode} disabledLink=\"Disabled Link\" />\n      <div className=\"container\">\n        <Alert alert={alert} />\n        {/* <Switch> */}\n        {/* <Route path=\"/about\"> */}\n        {/* <About /> */}\n        {/* </Route> */}\n        {/* <Route path=\"/\"> */}\n        <TextForm heading=\"This is the heading\" showAlert={showAlert} mode={mode} />\n        {/* </Route> */}\n        {/*  </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}